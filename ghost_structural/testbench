library IEEE;
use IEEE.std_logic_1164.ALL;

architecture behaviour of ghost_struct_tb is

   component ghost_struct
      port(clk         : in  std_logic;
           reset       : in  std_logic;
           pos_is_wall : in  std_logic;
           ghost_start : in  std_logic;
           ghost_input : in  std_logic_vector(3 downto 0);
   	row_reset	  : in std_logic_vector(4 downto 0);
   	col_reset   : in std_logic_vector(4 downto 0);
           row_old     : out std_logic_vector(4 downto 0);
           col_old     : out std_logic_vector(4 downto 0);
           row_new     : out std_logic_vector(4 downto 0);
           col_new     : out std_logic_vector(4 downto 0);
           en_wall     : out std_logic;
   	ghost_ready	: out std_logic);
   end component;

   signal clk         : std_logic;
   signal reset       : std_logic;
   signal pos_is_wall : std_logic;
   signal ghost_start : std_logic;
   signal ghost_input : std_logic_vector(3 downto 0);
   signal row_reset	  : std_logic_vector(4 downto 0);
   signal col_reset   : std_logic_vector(4 downto 0);
   signal row_old     : std_logic_vector(4 downto 0);
   signal col_old     : std_logic_vector(4 downto 0);
   signal row_new     : std_logic_vector(4 downto 0);
   signal col_new     : std_logic_vector(4 downto 0);
   signal en_wall     : std_logic;
   signal ghost_ready	: std_logic;

begin

test: ghost_struct port map (clk, reset, pos_is_wall, ghost_start, ghost_input, row_reset, col_reset, row_old, col_old, row_new, col_new, en_wall, ghost_ready);
   clk <= '1' after 0 ns, '0' after 100 ns when clk /= '0' else '1' after 100 ns;
   reset <= '1' after 0 ns, '0' after 400 ns;

   pos_is_wall <= '0' after 0 ns, '1' after 4000 ns;

   ghost_start <= '0' after 0 ns, '1' after 400 ns;

   ghost_input <= "0000" after 0 ns, "0100" after 200 ns;

   row_reset(0) <= '0' after 0 ns;
   row_reset(1) <= '0' after 0 ns;
   row_reset(2) <= '1' after 0 ns;
   row_reset(3) <= '1' after 0 ns;
   row_reset(4) <= '0' after 0 ns;

   col_reset(0) <= '0' after 0 ns;
   col_reset(1) <= '0' after 0 ns;
   col_reset(2) <= '1' after 0 ns;
   col_reset(3) <= '1' after 0 ns;
   col_reset(4) <= '0' after 0 ns;
end behaviour;
