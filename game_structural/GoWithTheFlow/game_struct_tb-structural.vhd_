library IEEE;
use IEEE.std_logic_1164.ALL;

architecture structural of game_struct_tb is
   component game_struct
      port(clk          : in  std_logic;
           reset        : in  std_logic;
           dir_pacman   : in  std_logic_vector(3 downto 0);
           dir_ghost1   : in  std_logic_vector(3 downto 0);
           dir_ghost2   : in  std_logic_vector(3 downto 0);
           vc_done_in      : in  std_logic;
           row_request  : in  std_logic_vector(4 downto 0);
           col_request  : in  std_logic_vector(4 downto 0);
           score_pulse  : out std_logic;
   	score_reset_out  : out std_logic;
   	game_over_out : out std_logic;
           cell_type    : out std_logic_vector(2 downto 0));
   end component;
   signal clk          : std_logic;
   signal reset        : std_logic;
   signal dir_pacman   : std_logic_vector(3 downto 0);
   signal dir_ghost1   : std_logic_vector(3 downto 0);
   signal dir_ghost2   : std_logic_vector(3 downto 0);
   signal vc_done_in      : std_logic;
   signal row_request  : std_logic_vector(4 downto 0);
   signal col_request  : std_logic_vector(4 downto 0);
   signal score_pulse  : std_logic;
   signal score_reset_out  : std_logic;
   signal game_over_out : std_logic;
   signal cell_type    : std_logic_vector(2 downto 0;
begin
test: game_struct port map (clk, reset, dir_pacman, dir_ghost1, dir_ghost2, vc_done_in, row_request, col_request, score_pulse, score_reset_out, game_over_out, cell_type);
-- clk <= '1' after 0 ns,
--      '0' after 100 ns when clk /= '0' else '1' after 100 ns;
   clk <= '0' after 0 ns;
   reset <= '0' after 0 ns;
   dir_pacman(0) <= '0' after 0 ns;
   dir_pacman(1) <= '0' after 0 ns;
   dir_pacman(2) <= '0' after 0 ns;
   dir_pacman(3) <= '0' after 0 ns;
   dir_ghost1(0) <= '0' after 0 ns;
   dir_ghost1(1) <= '0' after 0 ns;
   dir_ghost1(2) <= '0' after 0 ns;
   dir_ghost1(3) <= '0' after 0 ns;
   dir_ghost2(0) <= '0' after 0 ns;
   dir_ghost2(1) <= '0' after 0 ns;
   dir_ghost2(2) <= '0' after 0 ns;
   dir_ghost2(3) <= '0' after 0 ns;
   vc_done_in <= '0' after 0 ns;
   row_request(0) <= '0' after 0 ns;
   row_request(1) <= '0' after 0 ns;
   row_request(2) <= '0' after 0 ns;
   row_request(3) <= '0' after 0 ns;
   row_request(4) <= '0' after 0 ns;
   col_request(0) <= '0' after 0 ns;
   col_request(1) <= '0' after 0 ns;
   col_request(2) <= '0' after 0 ns;
   col_request(3) <= '0' after 0 ns;
   col_request(4) <= '0' after 0 ns;
end structural;

